generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Otp {
  id        String   @id @default(cuid())
  email     String
  otp       String
  createdAt DateTime @default(now())
  expiresAt DateTime

  @@map("otp")
}

model CandidateInfo {
  id              String         @id @default(cuid())
  firstName       String
  lastName        String
  email           String         @unique
  password        String
  age             Int?
  currentRole     String?
  totalExperience String?
  location        String?
  expectedCTC     String?
  skills          String?
  education       String? @db.Text
  work            String? @db.Text
  portfolioLink   String?
  githubLink      String?
  linkedinLink    String?
  twitterLink     String?
  resume          String?
  readyToRelocate Boolean?
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  applications    Applications[]
  savedJobs       SavedJobs[]

  @@map("candidate_info")
}

model HrInfo {
  id          String   @id @default(cuid())
  firstName   String
  lastName    String
  scope       String
  email       String   @unique
  password    String
  phoneNo     String?
  designation String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  jobs        Jobs[]

  @@map("hr_info")
}

model Jobs {
  jobId          Int            @id @default(autoincrement())
  role           String
  designation    String
  jobStatus      JobStatus      @default(ACTIVE)
  experience     Experience
  department     Department
  location       Location
  jobDescription String         @db.Text
  postedOn       DateTime       @default(now())
  hrId           String
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  applications   Applications[]
  savedJobs      SavedJobs[]
  hr             HrInfo         @relation(fields: [hrId], references: [id])

  @@index([jobStatus])
  @@index([department])
  @@index([location])
  @@index([experience])
  @@index([postedOn])
  @@index([hrId], map: "jobs_hrId_fkey")
  @@map("jobs")
}

model Applications {
  applicationId     String            @id @default(cuid())
  jobId             Int
  candidateId       String
  applicationStatus ApplicationStatus @default(REVIEWING)
  appliedOn         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  candidate         CandidateInfo     @relation(fields: [candidateId], references: [id])
  job               Jobs              @relation(fields: [jobId], references: [jobId])

  @@index([candidateId], map: "applications_candidateId_fkey")
  @@index([jobId], map: "applications_jobId_fkey")
  @@map("applications")
}

model SavedJobs {
  id          String        @id @default(cuid())
  jobId       Int
  candidateId String
  savedOn     DateTime      @default(now())
  candidate   CandidateInfo @relation(fields: [candidateId], references: [id])
  job         Jobs          @relation(fields: [jobId], references: [jobId])

  @@unique([jobId, candidateId])
  @@index([candidateId])
  @@index([jobId])
  @@map("saved_jobs")
}

enum JobStatus {
  ACTIVE
  INACTIVE
}

enum Experience {
  LESS_THAN_2
  TWO_TO_FIVE
  FIVE_TO_EIGHT
  EIGHT_TO_TWELVE
  MORE_THAN_12
}

enum Department {
  ENGINEERING
  MARKETING
  QA
  DEVOPS
  PRODUCT_MANAGER
}

enum Location {
  MUMBAI
  BHUBANESWAR
  DELHI
  BANGALORE
  HYDERABAD
}

enum ApplicationStatus {
  REJECTED
  REVIEWING
  SHORTLISTED
}
